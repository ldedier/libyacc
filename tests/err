In file included from srcs/ArithmeticGrammar.cpp:13:
In file included from includes/ArithmeticGrammar.hpp:16:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iostream:38:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:216:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:500:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string_view:176:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string:56:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:644:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1785:16: error: 'pointer' declared as a pointer to a reference of type 'AbstractNonTerminal<int, int> &'
    typedef _Tp*              pointer;
               ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1514:22: note: in instantiation of template class 'std::__1::allocator<AbstractNonTerminal<int, int> &>' requested here
    typedef typename allocator_type::value_type value_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:326:22: note: in instantiation of template class 'std::__1::allocator_traits<std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    typedef typename __alloc_traits::size_type       size_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:465:15: note: in instantiation of template class 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    : private __vector_base<_Tp, _Allocator>
              ^
includes/../../includes/AbstractGrammar.hpp:49:44: note: in instantiation of template class 'std::__1::vector<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
                std::vector<AbstractNonTerminal<T, C> &> _nonTerminals;
                                                         ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
In file included from srcs/ArithmeticGrammar.cpp:13:
In file included from includes/ArithmeticGrammar.hpp:16:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iostream:38:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:216:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:500:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string_view:176:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string:56:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:644:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1786:22: error: 'const_pointer' declared as a pointer to a reference of type 'AbstractNonTerminal<int, int> &'
    typedef const _Tp*        const_pointer;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1805:45: error: multiple overloads of 'address' instantiate to the same signature 'std::__1::allocator<AbstractNonTerminal<int, int> &>::const_pointer (std::__1::allocator<AbstractNonTerminal<int, int> &>::const_reference) const throw()' (aka 'int (AbstractNonTerminal<int, int> &) const throw()')
    _LIBCPP_INLINE_VISIBILITY const_pointer address(const_reference __x) const _NOEXCEPT
                                            ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1803:39: note: previous declaration is here
    _LIBCPP_INLINE_VISIBILITY pointer address(reference __x) const _NOEXCEPT
                                      ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:951:22: error: implicit instantiation of undefined template 'std::__1::__pointer_traits_element_type<int, false>'
    typedef typename __pointer_traits_element_type<pointer>::type    element_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1075:22: note: in instantiation of template class 'std::__1::pointer_traits<int>' requested here
    typedef typename pointer_traits<_Ptr>::template rebind<void>::other type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1518:22: note: in instantiation of template class 'std::__1::__void_pointer<int, std::__1::allocator<AbstractNonTerminal<int, int> &>, false>' requested here
    typedef typename __void_pointer<pointer, allocator_type>::type void_pointer;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:326:22: note: in instantiation of template class 'std::__1::allocator_traits<std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    typedef typename __alloc_traits::size_type       size_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:465:15: note: in instantiation of template class 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    : private __vector_base<_Tp, _Allocator>
              ^
includes/../../includes/AbstractGrammar.hpp:49:44: note: in instantiation of template class 'std::__1::vector<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
                std::vector<AbstractNonTerminal<T, C> &> _nonTerminals;
                                                         ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:741:8: note: template is declared here
struct __pointer_traits_element_type;
       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1075:53: error: no member named 'rebind' in 'std::__1::pointer_traits<int>'
    typedef typename pointer_traits<_Ptr>::template rebind<void>::other type;
                     ~~~~~~~~~~~~~~~~~~~~~~         ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1518:22: note: in instantiation of template class 'std::__1::__void_pointer<int, std::__1::allocator<AbstractNonTerminal<int, int> &>, false>' requested here
    typedef typename __void_pointer<pointer, allocator_type>::type void_pointer;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:326:22: note: in instantiation of template class 'std::__1::allocator_traits<std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    typedef typename __alloc_traits::size_type       size_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:465:15: note: in instantiation of template class 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    : private __vector_base<_Tp, _Allocator>
              ^
includes/../../includes/AbstractGrammar.hpp:49:44: note: in instantiation of template class 'std::__1::vector<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
                std::vector<AbstractNonTerminal<T, C> &> _nonTerminals;
                                                         ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
In file included from srcs/ArithmeticGrammar.cpp:13:
In file included from includes/ArithmeticGrammar.hpp:16:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iostream:38:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:216:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:500:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string_view:176:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string:56:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:644:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:853:22: error: type 'int' cannot be used prior to '::' because it has no members
    typedef typename _Tp::template rebind<_Up>::other type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:958:27: note: in instantiation of template class 'std::__1::__pointer_traits_rebind<int, const void, false>' requested here
        {typedef typename __pointer_traits_rebind<pointer, _Up>::type other;};
                          ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1098:44: note: in instantiation of template class 'std::__1::pointer_traits<int>::rebind<const void>' requested here
    typedef typename pointer_traits<_Ptr>::template rebind<const void>::other type;
                                           ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1519:22: note: in instantiation of template class 'std::__1::__const_void_pointer<int, std::__1::allocator<AbstractNonTerminal<int, int> &>, false>' requested here
    typedef typename __const_void_pointer<pointer, allocator_type>::type const_void_pointer;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:326:22: note: in instantiation of template class 'std::__1::allocator_traits<std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    typedef typename __alloc_traits::size_type       size_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:465:15: note: in instantiation of template class 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
    : private __vector_base<_Tp, _Allocator>
              ^
includes/../../includes/AbstractGrammar.hpp:49:44: note: in instantiation of template class 'std::__1::vector<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
                std::vector<AbstractNonTerminal<T, C> &> _nonTerminals;
                                                         ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
In file included from srcs/ArithmeticGrammar.cpp:13:
In file included from includes/ArithmeticGrammar.hpp:17:
In file included from includes/../../includes/AbstractGrammar.hpp:18:
In file included from ../includes/AbstractToken.hpp:18:
In file included from ../includes/Production.hpp:18:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:475:30: error: 'reference' is a protected member of 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >'
    typedef typename __base::reference               reference;
                             ^
includes/../../includes/AbstractGrammar.hpp:49:44: note: in instantiation of template class 'std::__1::vector<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >' requested here
                std::vector<AbstractNonTerminal<T, C> &> _nonTerminals;
                                                         ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:329:54: note: declared protected here
    typedef value_type&                              reference;
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:476:30: error: 'const_reference' is a protected member of 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >'
    typedef typename __base::const_reference         const_reference;
                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:330:54: note: declared protected here
    typedef const value_type&                        const_reference;
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:478:30: error: 'difference_type' is a protected member of 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >'
    typedef typename __base::difference_type         difference_type;
                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:331:54: note: declared protected here
    typedef typename __alloc_traits::difference_type difference_type;
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:479:30: error: 'pointer' is a protected member of 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >'
    typedef typename __base::pointer                 pointer;
                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:332:54: note: declared protected here
    typedef typename __alloc_traits::pointer         pointer;
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:480:30: error: 'const_pointer' is a protected member of 'std::__1::__vector_base<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >'
    typedef typename __base::const_pointer           const_pointer;
                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:333:54: note: declared protected here
    typedef typename __alloc_traits::const_pointer   const_pointer;
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:688:15: error: 'data' declared as a pointer to a reference of type 'std::__1::vector<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >::value_type' (aka 'AbstractNonTerminal<int, int> &')
    value_type*       data() _NOEXCEPT
              ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:691:21: error: 'data' declared as a pointer to a reference of type 'std::__1::vector<AbstractNonTerminal<int, int> &, std::__1::allocator<AbstractNonTerminal<int, int> &> >::value_type' (aka 'AbstractNonTerminal<int, int> &')
    const value_type* data() const _NOEXCEPT
                    ^
In file included from srcs/ArithmeticGrammar.cpp:13:
In file included from includes/ArithmeticGrammar.hpp:16:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iostream:38:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:216:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:500:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string_view:176:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string:56:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:644:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1785:16: error: 'pointer' declared as a pointer to a reference of type 'AbstractToken<int, int> &'
    typedef _Tp*              pointer;
               ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1514:22: note: in instantiation of template class 'std::__1::allocator<AbstractToken<int, int> &>' requested here
    typedef typename allocator_type::value_type value_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:326:22: note: in instantiation of template class 'std::__1::allocator_traits<std::__1::allocator<AbstractToken<int, int> &> >' requested here
    typedef typename __alloc_traits::size_type       size_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:465:15: note: in instantiation of template class 'std::__1::__vector_base<AbstractToken<int, int> &, std::__1::allocator<AbstractToken<int, int> &> >' requested here
    : private __vector_base<_Tp, _Allocator>
              ^
includes/../../includes/AbstractGrammar.hpp:50:38: note: in instantiation of template class 'std::__1::vector<AbstractToken<int, int> &, std::__1::allocator<AbstractToken<int, int> &> >' requested here
                std::vector<AbstractToken<T, C> &> _tokens;
                                                   ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
In file included from srcs/ArithmeticGrammar.cpp:13:
In file included from includes/ArithmeticGrammar.hpp:16:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iostream:38:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:216:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:500:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string_view:176:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string:56:
In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:644:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1786:22: error: 'const_pointer' declared as a pointer to a reference of type 'AbstractToken<int, int> &'
    typedef const _Tp*        const_pointer;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1805:45: error: multiple overloads of 'address' instantiate to the same signature 'std::__1::allocator<AbstractToken<int, int> &>::const_pointer (std::__1::allocator<AbstractToken<int, int> &>::const_reference) const throw()' (aka 'int (AbstractToken<int, int> &) const throw()')
    _LIBCPP_INLINE_VISIBILITY const_pointer address(const_reference __x) const _NOEXCEPT
                                            ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1803:39: note: previous declaration is here
    _LIBCPP_INLINE_VISIBILITY pointer address(reference __x) const _NOEXCEPT
                                      ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:853:22: error: type 'int' cannot be used prior to '::' because it has no members
    typedef typename _Tp::template rebind<_Up>::other type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:958:27: note: in instantiation of template class 'std::__1::__pointer_traits_rebind<int, void, false>' requested here
        {typedef typename __pointer_traits_rebind<pointer, _Up>::type other;};
                          ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1075:44: note: in instantiation of template class 'std::__1::pointer_traits<int>::rebind<void>' requested here
    typedef typename pointer_traits<_Ptr>::template rebind<void>::other type;
                                           ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:1518:22: note: in instantiation of template class 'std::__1::__void_pointer<int, std::__1::allocator<AbstractToken<int, int> &>, false>' requested here
    typedef typename __void_pointer<pointer, allocator_type>::type void_pointer;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:326:22: note: in instantiation of template class 'std::__1::allocator_traits<std::__1::allocator<AbstractToken<int, int> &> >' requested here
    typedef typename __alloc_traits::size_type       size_type;
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:465:15: note: in instantiation of template class 'std::__1::__vector_base<AbstractToken<int, int> &, std::__1::allocator<AbstractToken<int, int> &> >' requested here
    : private __vector_base<_Tp, _Allocator>
              ^
includes/../../includes/AbstractGrammar.hpp:50:38: note: in instantiation of template class 'std::__1::vector<AbstractToken<int, int> &, std::__1::allocator<AbstractToken<int, int> &> >' requested here
                std::vector<AbstractToken<T, C> &> _tokens;
                                                   ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
In file included from srcs/ArithmeticGrammar.cpp:13:
In file included from includes/ArithmeticGrammar.hpp:17:
In file included from includes/../../includes/AbstractGrammar.hpp:18:
In file included from ../includes/AbstractToken.hpp:18:
In file included from ../includes/Production.hpp:18:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:475:30: error: 'reference' is a protected member of 'std::__1::__vector_base<AbstractToken<int, int> &, std::__1::allocator<AbstractToken<int, int> &> >'
    typedef typename __base::reference               reference;
                             ^
includes/../../includes/AbstractGrammar.hpp:50:38: note: in instantiation of template class 'std::__1::vector<AbstractToken<int, int> &, std::__1::allocator<AbstractToken<int, int> &> >' requested here
                std::vector<AbstractToken<T, C> &> _tokens;
                                                   ^
includes/ArithmeticGrammar.hpp:19:33: note: in instantiation of template class 'AbstractGrammar<int, int>' requested here
class ArithmeticGrammar: public AbstractGrammar<int, int>
                                ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:329:54: note: declared protected here
    typedef value_type&                              reference;
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:476:30: error: 'const_reference' is a protected member of 'std::__1::__vector_base<AbstractToken<int, int> &, std::__1::allocator<AbstractToken<int, int> &> >'
    typedef typename __base::const_reference         const_reference;
                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:330:54: note: declared protected here
    typedef const value_type&                        const_reference;
                                                     ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
make: *** [objs/ArithmeticGrammar.o] Error 1
